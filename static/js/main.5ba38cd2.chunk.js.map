{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","pokedex.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Pokemon","className","this","props","info","name","src","sprites","other","home","front_default","alt","weight","height","React","Component","Pokedex","state","Pokemon_data","number_of_pokemons","number_per_batch","matched_keys","searching","percent_loaded","P","require","i","getPokemonByName","response","error","console","log","setState","prevState","Math","round","Object","keys","length","event","target","value","search_string","toLowerCase","total_keys","match_bool","map","key","includes","results","filter","d","ind","sort","id","placeholder","onChange","handleKeyPress","pokemon_name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ba38cd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  let Pokedex = require('pokedex-promise-v2');\n  let P = new Pokedex();\n\n  // P.getPokemonByName('eevee') // with Promise\n  // .then(function(response) {\n  //   console.log(response);\n  // })\n  // .catch(function(error) {\n  //   console.log('There was an ERROR: ', error);\n  // });\n\n  P.getPokemonByName(35, (response, error) => { // with callback\n    if(!error) {\n      console.log(response.sprites.other.home.front_default);\n    } else {\n      console.log(error);\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport './pokedex.css'\n\nclass Pokemon extends React.Component{\n\n    render(){\n        // console.log(\"this pokemon's info:\")\n        return(\n            <div className=\"pokemon\">\n                <h1>{this.props.info.name}</h1>\n                {/* <img src={this.props.info.sprites.other[\"official-artwork\"].front_default} alt=\"Pokemon Image\"/> */}\n                <img src={this.props.info.sprites.other.home.front_default} alt=\"Pokemon Image\"/>\n                <p>Weight: {this.props.info.weight} |  Height {this.props.info.height}</p>\n                <p></p>\n            </div>\n        )\n    }\n\n}\n\nclass Pokedex extends React.Component{\n    /*\n        1. fetch one pokemon data and store it in state\n        2. pass it as props to display it as a pokemon card\n    */\n   constructor(props){\n    super(props)\n    this.state = {Pokemon_data: {}, number_of_pokemons: 900, number_per_batch: 10, matched_keys:[], searching: false, percent_loaded: 0};\n   }\n\n   componentDidMount(){\n    let Pokedex = require('pokedex-promise-v2');\n    let P = new Pokedex();\n    for(let i=1;i<=this.state.number_of_pokemons;i++){\n        P.getPokemonByName(i, (response, error) => { // with callback\n            if(!error) {\n              let name = response.name\n              this.setState((prevState) =>({\n                  Pokemon_data: {...prevState.Pokemon_data, [name]: response}\n                  ,percent_loaded: Math.round((Object.keys(this.state.Pokemon_data).length/898)*100)\n                //   ,matched_keys: Object.keys(this.state.Pokemon_data)\n                }))\n            //   console.log(response); \n            } else {\n              console.log(error);\n            }\n          });\n    }\n    // var interval = {\n    //     limit: 10,\n    //     offset: 34\n    //   }\n    // P.getPokemonsList(interval, (response) => {\n    //     console.log(\"list of pokemon:\")\n    //     console.log(response);\n    // })\n   }\n\n\n   handleKeyPress(event){\n        if(event.target.value===''){\n            this.setState({searching: false})\n        }\n        else{\n            let search_string = event.target.value.toLowerCase()\n            console.log('key pressed' + event.target.value)\n            let total_keys = Object.keys(this.state.Pokemon_data)\n            let match_bool = total_keys.map((key) => key.includes(search_string)) // returns an array of bools about whether it has the substring we are looking for\n            let results = total_keys.filter((d, ind) => match_bool[ind]).sort() // filters all the keys and returns the keys that contains the substring\n            // TODO: can sort by the one with the highest match level\n            console.log(\"hiii\")\n            console.log(total_keys)\n            console.log(match_bool)\n            console.log(results)\n            this.setState({matched_keys: results, searching: true})\n        }\n    }\n\n   render(){\n       console.log(\"Searching: \")\n       console.log(this.state.searching)\n\n       console.log(Object.keys(this.state.Pokemon_data).length)\n\n       return (\n        //    <div></div>\n        //    <div>{this.state.Pokemon_data['1'].height}</div> && this.state.number_of_pokemons == Object.keys(this.state.Pokemon_data).length\n        <div>\n            <div className='inputContainer'>\n                <input className='inputArea' id='inputBox' placeholder=\"Find ur Pokemon\" onChange={(event) => this.handleKeyPress(event)}></input>\n                {\n                    this.state.percent_loaded != 100 &&\n                    <p>loading Pokemons... {this.state.percent_loaded}% has arrived</p>\n                }\n            </div>\n            {/* visibility='hidden' display='none' */}\n            <div className='container'> \n                {\n                    Object.keys(this.state.Pokemon_data).length >= this.state.number_per_batch &&\n                    // if we have loaded a preliminary batch of data we can start displaying them, then we display items depending on whether they are searching for it or not\n                    (this.state.searching)? //must wait until each pokemon's information has been fetched from the API\n                        this.state.matched_keys.map((pokemon_name, ind) =>\n                            <Pokemon key={ind} info={this.state.Pokemon_data[pokemon_name]} ></Pokemon>\n                        )\n                    :\n                        Object.keys(this.state.Pokemon_data).map((pokemon_name, ind) =>\n                            <Pokemon key={ind} info={this.state.Pokemon_data[pokemon_name]} ></Pokemon>\n                        )\n                }\n            </div>\n        </div>\n       )\n   }\n}\n\nexport default Pokedex\n\n// {Object.keys(this.state.Pokemon_data).length == this.state.number_of_pokemons && //must wait until each pokemon's information has been fetched from the API\n// Object.keys(this.state.Pokemon_data).map((pokemon_name) =>\n//     <Pokemon info={this.state.Pokemon_data[pokemon_name]} ></Pokemon>\n// )\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Pokedex from './pokedex'\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Pokedex />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}